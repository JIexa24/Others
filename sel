#!/usr/bin/env bash
RED="\033[1;31m"
GRE="\033[1;32m"
YEL="\033[1;33m"
BLU="\033[1;34m"
LBL="\033[1;36m"
DEF="\033[1;00m"

if [[ $# < 1 ]]
then
  echo -e "No arguments found!"
  exit
fi
SERVER=$1
HOME_PATH=/home
USER=`whoami`

. ${HOME}/.sel
if [[ $? != 0 ]]; then exit 1; fi

function valid_ip()
{
  local ip=$1
  local stat=1

  if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    OIFS=$IFS
    IFS='.'
    ip=($ip)
    IFS=$OIFS
    [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
      && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
    stat=$?
  fi
  return $stat
}

if [[ $SERVER == "--help" ]]; then
  printf "${YEL}Servers${DEF}:\n" >&2
  for ((i = 0; i < ${#SERVERS[@]}; i+=2)); do
    printf "${LBL}${SERVERS[$i]}${DEF}: ${GRE}${SERVERS[$i + 1]}${DEF}\n" >&2
  done
  exit 0
fi
shift
printf "[Info] : Command [$*]\n" >&2
printf "[Info] : Check in list.\n" >&2
for ((i = 0; i < ${#SERVERS[@]}; i+=2))
do
if [[ $SERVER == ${SERVERS[$i]} ]]
then
  printf "[Info] : Found in list. Connect.\n" >&2
  ssh ${SERVERS[$i+1]} $* ; printf "\n[$(date)] : Disconnect.\n" >&2
  exit 0
fi
done

printf "[Info] : Check for ip\n" >&2
if ! valid_ip $SERVER
then
  printf "[Info] : Not ip. Check number.\n" >&2
  if [[ $SERVER =~ ^[0-9]*$ ]]
  then
    if (( $SERVER > 0 ))
    then
      printf "[Info] : It's number. Connect.\n" >&2
      ssh server-$SERVER $* ; printf "\n[$(date)] : Disconnect.\n" >&2
      exit 0
    fi
  fi
else
  printf "[Info] : It's ip. Connect.\n" >&2
  ssh $SERVER $* ; printf "\n[$(date)] : Disconnect.\n" >&2
  exit 0
fi

if [[ $SERVER =~ \.$ ]]
then
  printf "[Info] : It's fqdn. Connect.\n" >&2
  ssh $SERVER $* ; printf "\n[$(date)] : Disconnect.\n" >&2
  exit 0
fi

printf "[Info] : Trying to append domains. Else trying to connect $SERVER.\n" >&2

for ((i = 0; i < ${#DOMAINS[@]}; i+=1))
do
nslookup $SERVER.${DOMAINS[$i]}. >> /dev/null 2>&1
if [ 0 == $? ]
then
  ssh $SERVER.${DOMAINS[$i]} $* ; printf "\n[$(date)] : Disconnect.\n" >&2
  exit 0
fi
done

nslookup $SERVER >> /dev/null 2>&1
if [ 0 == $? ]
then
  ssh $SERVER $* ; printf "\n[$(date)] : Disconnect.\n" >&2
  exit 0
fi
printf "\n[Info] : Could not connect.\n" >&2
exit 0

